--- 
- name: tomcat 
  become: yes
  hosts: all 
  vars: 
    user_name: tomcat
    group_name: tomcat
    user_home: /opt/tomcat
    user_shell: /bin/false
    java_versions: 
      - openjdk-8-jdk
      - openjdk-11-jdk
      - openjdk-17-jdk 
    tomcat_url: https://archive.apache.org/dist/tomcat/tomcat-10/v10.0.8/bin/apache-tomcat-10.0.8.tar.gz
    url_dest: /tmp/apache-tomcat-10.0.8.tar.gz
    permission_path: /opt/tomcat/bin 
    user_xml: tomcat-user.xml
    user_xml_dest: /opt/tomcat/conf/ 
    user_context_xml: context.xml
    user_contxt_dest: /opt/tomcat/webapps/host-manager/META-INF/
    tomcat_serivce_file: tomcat.service
    tomcat_serivce_file_dest: /etc/systemd/system/tomcat.service 
    permission_service: /opt/tomcat/apache-tomcat-10.0.8/bin/ 
    permission_sh: /opt/tomcat/apache-tomcat-10.0.8/bin/*.sh


  tasks: 

    - name: create home_directory
      ansible.builtin.file:
        path: "{{ user_home  }}" 
        state: directory 
        mode: '777' 
    - name: creating user 
      ansible.builtin.debug:
        msg: creating tomcat user
    - name: creat the user 
      ansible.builtin.user:
        name: tomcat 
        home: "{{ user_home }}"
        shell:  "{{ user_shell }}" 
    - name: permission home_directory
      ansible.builtin.file:
        path: "{{ user_home  }}" 
        owner: "{{ user_name }}" 
        group: "{{ group_name }}" 
        mode: '777' 
    - name: install java in hosts 
      ansible.builtin.debug: 
        msg: install java 
    - name: install the java 
      ansible.builtin.apt: 
        name: "{{ item }}"
      loop: "{{ java_versions }}" 
    - name: tomcat url 
      ansible.builtin.get_url:
        url: "{{ tomcat_url }}"
        dest: "{{ url_dest  }}"
    - name: unarchive the file 
      ansible.builtin.unarchive:
        src: "{{ url_dest }}" 
        dest: "{{ user_home }}"
        remote_src: yes    
    - name: permission 
      ansible.builtin.file: 
        path: "{{ user_home  }}" 
        owner: "{{ user_name }}" 
        group: "{{ group_name }}" 
        mode: '777'  
    - name: copy folder 
      ansible.builtin.copy:
        src: /opt/tomcat/apache-tomcat-10.0.8/ 
        dest: /opt/tomcat/ 
        remote_src: yes  
        mode: '777'                 
    - name: copy the user.xml file
      ansible.builtin.copy: 
        src: "{{ user_xml }}"
        dest: "{{ user_xml_dest }}"    
    - name: copy the context.xml file
      ansible.builtin.copy: 
        src: "{{ user_context_xml }}"
        dest: "{{  user_contxt_dest }}"          
    - name: copy the service.xml file
      ansible.builtin.copy: 
        src: "{{  tomcat_serivce_file}}"
        dest: "{{ tomcat_serivce_file_dest }}" 
    - name: permission tomcat bin 
      ansible.builtin.file:
        path: "{{ permission_service }}"
        owner: "{{ user_name }}" 
        group: "{{ group_name }}" 
        mode: '777' 
    - name: permission for .sh 
      ansible.builtin.file:
        path: /opt/tomcat/apache-tomcat-10.0.8/bin/ 
        owner: "{{ user_name }}" 
        group: "{{ group_name }}" 
        mode: '777' 
      with_items: 
        -  "{{ permission_sh }}"
    - name: enable the service 
      ansible.builtin.systemd:
        name: tomcat.service
        state: started
        enabled: true
        daemon_reload: true
    